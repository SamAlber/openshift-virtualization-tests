[tool.ruff]
preview = true
line-length = 120
fix = true
output-format = "grouped"

[tool.ruff.format]
exclude = [".git", ".venv", ".mypy_cache", ".tox", "__pycache__"]

[tool.ruff.lint.isort]
order-by-type = true
known-third-party = ["ocp_resources", "ocp_utilities", "timeout_sampler", "pyhelper_utils"]

[tool.mypy]
warn_unused_configs = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = [
  "libs.*",
  "tests.network.libs.*",
  "tests.network.localnet.*"
]
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
strict_equality = true
strict_concatenate = true


[project]
name = "openshift-virtualization-tests-4.20"
requires-python = "==3.12.*"
version = "4.20"
description = "Tests for Openshift Virtualization"
authors = [{ "name" = "openshift-virtualization-tests" }]
dependencies = [
  "bcrypt>=4.2.0",
  "bitmath>=1.3.3.1",
  "bitwarden-sdk>=1.0.0",
  "bs4>=0.0.2",
  "click>=8.1.7",
  "colorlog>=6.9.0",
  "deepdiff>=8.0.1",
  "dictdiffer>=0.9.0",
  "docker>=7.1.0",
  "importlib-metadata>=8.5.0",
  "importlib-resources>=6.4.5",
  "jinja2>=3.1.4",
  "jira>=3.8.0",
  "jsons>=1.6.3",
  "kubernetes~=31.0.0",
  "netaddr>=1.3.0",
  "openshift-python-utilities>=6.0.0",
  "openstacksdk>=4.1.0",
  "pexpect>=4.9.0",
  "podman>=5.2.0",
  "pyhelper-utils>=1.0.1",
  "pytest>=8.3.3",
  "pytest-benchmark>=5.1.0",
  "pytest-dependency>=0.6.0",
  "pytest-jira~=0.3.21",
  "pytest-order>=1.3.0",
  "pytest-progress>=1.3.0",
  "pytest-testconfig>=0.2.0",
  "python-benedict>=0.34.0",
  "python-rrmngmnt>=0.1.32",
  "python-utility-scripts>=1.0.1",
  "pyvmomi>=8.0.3.0.1",
  "pyyaml>=6.0.2",
  "requests>=2.32.3",
  "sh>=2.1.0",
  "shortuuid>=1.0.13",
  "sqlalchemy>=2.0.36",
  "timeout-sampler>=1.0.1",
  "urllib3>=2.2.3",
  "xmltodict>=0.14.2",
  "marshmallow~=3.26.1",
  "python-simple-logger>=2.0.13",
  "pytest-html>=4.1.1",
]

[project.optional-dependencies]
# Dependencies for utilities unit testing
utilities-test = [
    "pytest>=8.3.3",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.2.0",
    "pytest-watch>=4.2.0",
]

[tool.hatch.build.targets.wheel]
packages = ["*"]


[tool.uv]
dev-dependencies = ["ipdb>=0.13.13", "ipython>=8.12.3"]

[tool.uv.sources]

# Utilities Unit Testing Configuration
[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["utilities/unittests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = """
    -ra
    --strict-markers
    --strict-config
    --cov=utilities
    --cov-branch
    --cov-report=term-missing:skip-covered
    --cov-report=html:utilities/htmlcov
    --cov-report=xml:utilities/coverage.xml
    --cov-fail-under=90
"""

# Coverage configuration for utilities unit tests
[tool.coverage.run]
source = ["utilities"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/manifests/*",
    "*.pyc",
    "*/test_*.py",
    "__init__.py",
    "utilities/unittests/conftest.py",
    # TODO: Add coverage to these large modules when individual fixes are needed
    "utilities/hco.py",
    "utilities/infra.py",
    "utilities/network.py",
    "utilities/operator.py",
    "utilities/storage.py",
    "utilities/virt.py",
]

[tool.coverage.report]
precision = 2
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "except ImportError:",
]
show_missing = true
skip_covered = false

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
